{
  "$schema": "http://json-schema.org/draft-07/schema#",
  "title": "Lokstra Configuration Schema",
  "description": "Schema for Lokstra framework YAML configuration files",
  "type": "object",
  "properties": {
    "configs": {
      "type": "array",
      "description": "General configuration key-value pairs",
      "items": {
        "type": "object",
        "required": ["name", "value"],
        "properties": {
          "name": {
            "type": "string",
            "description": "Configuration key name",
            "minLength": 1
          },
          "value": {
            "description": "Configuration value (can be string, number, bool, object, etc.)"
          }
        },
        "additionalProperties": false
      }
    },
    "services": {
      "type": "array",
      "description": "Service configurations",
      "items": {
        "type": "object",
        "required": ["name"],
        "properties": {
          "name": {
            "type": "string",
            "description": "Service name",
            "minLength": 1
          },
          "type": {
            "type": "string",
            "description": "Service type, if empty same as name"
          },
          "enable": {
            "type": "boolean",
            "description": "Whether the service is enabled (default: true)",
            "default": true
          },
          "config": {
            "type": "object",
            "description": "Service-specific configuration",
            "additionalProperties": true
          }
        },
        "additionalProperties": false,
        
        "if": {
          "anyOf": [
            {
              "properties": {
                "type": { "const": "dbpool_pg" }
              },
              "required": ["type"]
            },
            {
              "properties": {
                "name": { "const": "dbpool_pg" }
              },
              "required": ["name"],
              "not": {
                "properties": {
                  "type": { "minLength": 1 }
                },
                "required": ["type"]
              }
            }
          ]
        },
        "then": {
          "required": ["config"],
          "properties": {
            "config": { "$ref": "#/definitions/dbpool_pg" }
          }
        }
      }
    },
    "middlewares": {
      "type": "array",
      "description": "Middleware configurations",
      "items": {
        "type": "object",
        "required": ["name"],
        "properties": {
          "name": {
            "type": "string",
            "description": "Middleware name",
            "minLength": 1
          },
          "type": {
            "type": "string",
            "description": "Middleware type, if empty same as name"
          },
          "enable": {
            "type": "boolean",
            "description": "Whether the middleware is enabled (default: true)",
            "default": true
          },
          "config": {
            "type": "object",
            "description": "Middleware-specific configuration",
            "additionalProperties": true
          }
        },
        "additionalProperties": false
      }
    },
    "servers": {
      "type": "array",
      "description": "Server configurations",
      "items": {
        "type": "object",
        "required": ["name", "apps"],
        "properties": {
          "name": {
            "type": "string",
            "description": "Server name",
            "minLength": 1
          },
          "baseUrl": {
            "type": "string",
            "description": "Base URL of the server (default: http://localhost). Accepts a plain URI (any scheme) or env placeholders: ${KEY}, ${ENV:KEY:DEFAULT}, ${KEY:DEFAULT}. DEFAULT must be a URI.",
            "pattern": "^(?:[A-Za-z][A-Za-z0-9+.-]*:(?:\\/\\/\\S+|\\S*)|\\$\\{(?:ENV:[A-Za-z_][A-Za-z0-9_]*:[A-Za-z][A-Za-z0-9+.-]*:(?:\\/\\/[^\\s}]+|[^\\s}]*)|[A-Za-z_][A-Za-z0-9_]*:[A-Za-z][A-Za-z0-9+.-]*:(?:\\/\\/[^\\s}]+|[^\\s}]*)|[A-Za-z_][A-Za-z0-9_]*)\\})$",
            "examples": [
              "http://localhost",
              "unix:///var/run/app.sock",
              "sock:///tmp/app.sock",
              "${BASE_URL}",
              "${BASE_URL:http://localhost}",
              "${BASE_URL:unix:///var/run/app.sock}",
              "${ENV:API_ENDPOINT:https://api.example.com/v1}"
            ]
          },
          "deployment-id": {
            "type": "string",
            "description": "Deployment ID for grouping servers"
          },
          "apps": {
            "type": "array",
            "description": "Applications within this server",
            "minItems": 1,
            "items": {
              "type": "object",
              "required": ["addr"],
              "properties": {
                "name": {
                  "type": "string",
                  "description": "App name (auto-generated if not provided)"
                },
                "addr": {
                  "type": "string",
                  "description": "Listen address (e.g., :8080, localhost:3000)",
                  "minLength": 1
                },
                "listener-type": {
                  "type": "string",
                  "description": "Listener type (default: default)",
                  "default": "default"
                },
                "routers": {
                  "type": "array",
                  "description": "Router names to mount on this app",
                  "items": {
                    "type": "string",
                    "minLength": 1
                  }
                }
              },
              "additionalProperties": false
            }
          }
        },
        "additionalProperties": false
      }
    }
  },
  "additionalProperties": false,




  "definitions": {
    "dbpool_pg": {
      "$id": "dbpool_pg",
      "type": "object",
      "properties": {
        "dsn": { "type": "string" },
        "host": { "type": "string" },
        "port": { "type": ["string", "integer"] },
        "database": { "type": "string" },
        "username": { "type": "string" },
        "password": { "type": "string" },
        "min_conns": { "type": ["integer", "string"] },
        "max_conns": { "type": ["integer", "string"] },
        "max_idle_time": { "type": "string" },
        "max_lifetime": { "type": "string" },
        "sslmode": { "type": "string" }
      },
      "allOf": [
        {
          "if": {
            "properties": {
              "dsn": { "not": { "minLength": 1 } }
            },
            "required": []
          },
          "then": {
            "required": ["host", "port", "database"]
          }
        }
      ],
      "additionalProperties": false
    }
  }
}